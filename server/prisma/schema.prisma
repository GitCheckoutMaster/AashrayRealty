generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id                String      @id @default(auto()) @map("_id") @db.ObjectId
    name              String?
    email             String      @unique
    image             String?
    phoneNumber       String?
    address           String?
    isAdmin           Boolean     @default(false)
    canAddAdmin       Boolean     @default(false)
    bookedVisits      Json[]
    favResidenciesID  String[]    @db.ObjectId
    ownedResidencies  Residency[] @relation("Owner")
    queries           Queries[]
    reviews           Review[]
    createdAt         DateTime    @default(now())
    updatedAt         DateTime    @updatedAt
}

model Residency {
    id           String    @id @default(auto()) @map("_id") @db.ObjectId
    title        String
    description  String
    price        Int
    address      String
    city         String
    country      String
    images       String[]
    facilities   Json
    userEmail    String
    owner        User      @relation("Owner", fields: [userEmail], references: [email])
    reviews      Review[]
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
    Queries      Queries[]
    propertyType String
    bookedBy     String?
    type         String

    @@unique(fields: [address, userEmail])
}

model Review {
    id          String    @id @default(auto()) @map("_id") @db.ObjectId
    rating      Int
    comment     String
    residencyID String    @db.ObjectId
    residency   Residency @relation(fields: [residencyID], references: [id])
    userEmail   String
    user        User      @relation(fields: [userEmail], references: [email])
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt

    @@unique(fields: [residencyID, userEmail])
}

model Queries {
    id          String    @id @default(auto()) @map("_id") @db.ObjectId
    name        String
    question    String
    userEmail   String
    answer      String?
    residencyId String    @db.ObjectId
    residency   Residency @relation(fields: [residencyId], references: [id])
    user        User      @relation(fields: [userEmail], references: [email])
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
}
